@model StoreAppWeb.Models.ProductModelView

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

            <div class="modal-body">
                @using (Html.BeginForm("Create", "Products", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*@Html.HiddenFor(m => m.code)
        @Html.HiddenFor(m => m.account_code)*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CatergoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CatergoryId, new { htmlAttributes = new { @class = "form-control", @type = "datetime" } })
                            @Html.ValidationMessageFor(model => model.CatergoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                 
                    <div class="form-group">
                        @Html.LabelFor(model => model.Quanitity, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Quanitity, new { htmlAttributes = new { @class = "form-control"} })
                            @Html.ValidationMessageFor(model => model.Quanitity, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>


                  </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save Changes" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
   >